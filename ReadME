# AdaCapstone: Graduate congrats

## Table of Contents

1. Introduction
2. Project Description
3. Technology Stack
4. MVP Features
5. File Structure
6. Deployment
7. Future Enhancements
8. Conclusion

---

### 1. Introduction

Phoenix 19 is a software development project designed to showcase full stack development. It combines React and Django to provide a personalized “congrats you’re about to graduate” message.

---

### 2. Project Description

AdaCapstone is divided into two main sections:

- **Portfolio Page**: A landing page at `www.moyodev.com`. This part of the project is a sparse template for now. it is currently deployed but is not built out and does not link to my capstone as I intended.
- my-new-mvp: The main application where users can input their name and receive a randomized message and image on the screen. This is will be deployed at `capstone.moyodev.com`.

---

### 3. Technology Stack

- **Frontend**: React, HTML/CSS
- **Backend**: Django
- **Database**: SQLite (locally) and PostgreSQL (on Heroku)
- **Deployment**: Heroku
- **Version Control**: Git
- **Image Storage**: AWS S3 buckets

---

### 4. MVP Features

- **User Input Page**: Allows users to input their name and press a button to get a message.
- **Database Management**: Stores messages and retrieves a random one for the user.
- **Personalized Greeting**: Displays a greeting that includes the user's name.
- **Image Display**: Shows a random image from the AWS bucket alongside the message.

---

### 5. File Structure

The file structure is vital for the seamless operation of the application. The main folders and their purposes are as follows:

- **MyDjangoCapstoneRoot**: Houses the Django project and its applications.
- **react-project-root**: Contains the React components and other frontend assets.
- **static/frontend**: Stores the compiled React build that Django serves.
- **media/images**: Contains the images to be served.
- **staticfiles**: Generated by Django to manage static files.

[Detailed File Structure Here]

---

### 6. Deployment

The application is deployed on Heroku but is not functioning. While the backend Django app deployment is straightforward, the frontend React app requires building and then serving the static files via Django. AWS S3 buckets are used to store images, which are referenced through URLs in the application.

---

### 7. Future Enhancements

- **User Accounts**: Introduce user accounts for personalized experiences.
- **Save & Share**: Allow users to save their favorite messages and share them. or post messages for each other
